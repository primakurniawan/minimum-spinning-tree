(()=>{var t={796:t=>{t.exports=function(t,e){var n=e.length;if(0!==n){var r=t.length;t.length+=n;for(var i=0;i<n;i++)t[r+i]=e[i]}}},416:(t,e,n)=>{var r=n(186),i=n(972),o="weight";function a(t,e){return t[0]>e[0]?1:t[0]<e[0]?-1:t[1]>e[1]?1:t[1]<e[1]?-1:t[2]>e[2]?1:t[2]<e[2]?-1:0}function u(t,e){return t[0]>e[0]?1:t[0]<e[0]?-1:t[1]>e[1]?1:t[1]<e[1]?-1:t[2]>e[2]?1:t[2]<e[2]?-1:t[3]>e[3]?1:t[3]<e[3]?-1:0}t.exports={bidirectional:function(t,e,n,u){return function(t,e,n,u){if(e=""+e,n=""+n,!r(t))throw new Error("graphology-shortest-path/dijkstra: invalid graphology instance.");if(e&&!t.hasNode(e))throw new Error('graphology-shortest-path/dijkstra: the "'+e+'" source node does not exist in the given graph.');if(n&&!t.hasNode(n))throw new Error('graphology-shortest-path/dijkstra: the "'+n+'" target node does not exist in the given graph.');if(u=u||o,e===n)return[0,[e]];var c=[{},{}],d=[{},{}],s=[new i(a),new i(a)],h=[{},{}];d[0][e]=[e],d[1][n]=[n],h[0][e]=0,h[1][n]=0;var f,p,l,g,y,v,w,b,m,k,_,E=[],x=1/0,G=0,A=1;for(s[0].push([0,G++,e]),s[1].push([0,G++,n]);s[0].size&&s[1].size;)if(g=(f=s[A=1-A].pop())[0],!((y=f[2])in c[A])){if(c[A][y]=g,y in c[1-A])return[x,E];for(b=0,m=(p=1===A?t.inboundEdges(y):t.outboundEdges(y)).length;b<m;b++){if(w=p[b],v=t.opposite(y,w),l=c[A][y]+(k=w,void 0,"number"!=typeof(_=t.getEdgeAttribute(k,u))||isNaN(_)?1:_),v in c[A]&&l<c[A][v])throw Error("graphology-shortest-path/dijkstra: contradictory paths found. Do some of your edges have a negative weight?");(!(v in h[A])||l<h[A][v])&&(h[A][v]=l,s[A].push([l,G++,v]),d[A][v]=d[A][y].concat(v),v in h[0]&&v in h[1]&&(g=h[0][v]+h[1][v],(0===E.length||x>g)&&(x=g,E=d[0][v].concat(d[1][v].slice(0,-1).reverse()))))}}return[1/0,null]}(t,e,n,u)[1]},singleSource:function(t,e,n){var u={};return function(t,e,n,u,c,d){if(!r(t))throw new Error("graphology-shortest-path/dijkstra: invalid graphology instance.");n=n||o;var s,h,f,p,l,g,y,v,w,b,m,k,_,E={},x={},G=new i(a),A=0;for(v=0,b=e.length;v<b;v++)x[p=e[v]]=0,G.push([0,A++,p]),d&&(d[p]=[p]);for(;G.size;)if(y=(h=G.pop())[0],!((p=h[2])in E)){if(E[p]=y,p===c)break;for(w=0,m=(s=t.outboundEdges(p)).length;w<m;w++){if(g=s[w],l=t.opposite(p,g),k=g,void 0,f=("number"!=typeof(_=t.getEdgeAttribute(k,n))||isNaN(_)?1:_)+E[p],l in E&&f<E[l])throw Error("graphology-shortest-path/dijkstra: contradictory paths found. Do some of your edges have a negative weight?");(!(l in x)||f<x[l])&&(x[l]=f,G.push([f,A++,l]),d&&(d[l]=d[p].concat(l)))}}}(t,[e],n,0,null,u),u},brandes:function(t,e,n){e=""+e,n=n||o;var r,a,c,d,s,h,f,p,l,g,y=[],v={},w={},b=t.nodes();for(l=0,g=b.length;l<g;l++)v[h=b[l]]=[],w[h]=0;var m={};w[e]=1;var k={};k[e]=0;var _=0,E=new i(u);for(E.push([0,_++,e,e]);E.size;)if(d=(a=E.pop())[0],c=a[2],!((h=a[3])in m))for(w[h]+=w[c],y.push(h),m[h]=d,l=0,g=(r=t.outboundEdges(h)).length;l<g;l++)p=r[l],f=t.opposite(h,p),s=d+(t.getEdgeAttribute(p,n)||1),f in m||f in k&&!(s<k[f])?s===k[f]&&(w[f]+=w[h],v[f].push(h)):(k[f]=s,E.push([s,_++,h,f]),w[f]=0,v[f]=[h]);return[y,v,w]}}},816:(t,e,n)=>{var r=n(416),i=n(171);i.dijkstra=r,i.unweighted=i,t.exports=i},171:(t,e,n)=>{var r=n(186),i=n(937),o=n(796);function a(t,e,n){if(!r(t))throw new Error("graphology-shortest-path: invalid graphology instance.");if(arguments.length<3)throw new Error("graphology-shortest-path: invalid number of arguments. Expecting at least 3.");if(!t.hasNode(e))throw new Error('graphology-shortest-path: the "'+e+'" source node does not exist in the given graph.');if(!t.hasNode(n))throw new Error('graphology-shortest-path: the "'+n+'" target node does not exist in the given graph.');if((e=""+e)==(n=""+n))return[e];var i=t.inboundNeighbors.bind(t),o=t.outboundNeighbors.bind(t),a={},u={};a[e]=null,u[n]=null;var c,d,s,h,f,p,l,g,y=[e],v=[n],w=!1;t:for(;y.length&&v.length;)if(y.length<=v.length){for(c=y,y=[],f=0,l=c.length;f<l;f++)for(p=0,g=(s=o(d=c[f])).length;p<g;p++)if((h=s[p])in a||(y.push(h),a[h]=d),h in u){w=!0;break t}}else for(c=v,v=[],f=0,l=c.length;f<l;f++)for(p=0,g=(s=i(d=c[f])).length;p<g;p++)if((h=s[p])in u||(v.push(h),u[h]=d),h in a){w=!0;break t}if(!w)return null;for(var b=[];h;)b.unshift(h),h=a[h];for(h=u[b[b.length-1]];h;)b.push(h),h=u[h];return b.length?b:null}function u(t,e){if(!r(t))throw new Error("graphology-shortest-path: invalid graphology instance.");if(arguments.length<2)throw new Error("graphology-shortest-path: invalid number of arguments. Expecting at least 2.");if(!t.hasNode(e))throw new Error('graphology-shortest-path: the "'+e+'" source node does not exist in the given graph.');var n,i,o,a,u,c,d={},s={};for(d[e=""+e]=!0,s[e]=[e];Object.keys(d).length;)for(o in n=d,d={},n)for(u=0,c=(i=t.outboundNeighbors(o)).length;u<c;u++)s[a=i[u]]||(s[a]=s[o].concat(a),d[a]=!0);return s}function c(t,e,n){if(!r(e))throw new Error("graphology-shortest-path: invalid graphology instance.");if(!e.hasNode(n))throw new Error('graphology-shortest-path: the "'+n+'" source node does not exist in the given graph.');n=""+n;var i=new Set,a={},u=0;a[n]=0;for(var c,d,s,h=[n];0!==h.length;){var f=[];for(c=0,d=h.length;c<d;c++)s=h[c],i.has(s)||(i.add(s),o(f,e[t](s)),a[s]=u);u++,h=f}return a}var d=c.bind(null,"outboundNeighbors"),s=c.bind(null,"neighbors");function h(t,e,n){return arguments.length<3?u(t,e):a(t,e,n)}h.bidirectional=a,h.singleSource=u,h.singleSourceLength=d,h.undirectedSingleSourceLength=s,h.brandes=function(t,e){e=""+e;var n,r,o,a,u,c,d,s,h,f=[],p={},l={},g=t.nodes();for(c=0,s=g.length;c<s;c++)p[a=g[c]]=[],l[a]=0;var y={};l[e]=1,y[e]=0;for(var v=i.of(e);v.size;)for(a=v.dequeue(),f.push(a),n=y[a],r=l[a],d=0,h=(o=t.outboundNeighbors(a)).length;d<h;d++)(u=o[d])in y||(v.enqueue(u),y[u]=n+1),y[u]===n+1&&(l[u]+=r,p[u].push(a));return[f,p,l]},t.exports=h},186:t=>{t.exports=function(t){return null!==t&&"object"==typeof t&&"function"==typeof t.addUndirectedEdgeWithKey&&"function"==typeof t.dropNode&&"boolean"==typeof t.multi}},698:function(t){t.exports=function(){"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}function e(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}function n(t){return(n=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function r(t,e){return(r=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function i(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}function o(t,e,n){return(o=i()?Reflect.construct:function(t,e,n){var i=[null];i.push.apply(i,e);var o=new(Function.bind.apply(t,i));return n&&r(o,n.prototype),o}).apply(null,arguments)}function a(t){var e="function"==typeof Map?new Map:void 0;return(a=function(t){if(null===t||(i=t,-1===Function.toString.call(i).indexOf("[native code]")))return t;var i;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,a)}function a(){return o(t,arguments,n(this).constructor)}return a.prototype=Object.create(t.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),r(a,t)})(t)}function u(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}var c=function(){for(var t=arguments[0],e=1,n=arguments.length;e<n;e++)if(arguments[e])for(var r in arguments[e])t[r]=arguments[e][r];return t};function d(t,e,n,r){var i=t._nodes.get(e),o=null;return i?o="mixed"===r?i.out&&i.out[n]||i.undirected&&i.undirected[n]:"directed"===r?i.out&&i.out[n]:i.undirected&&i.undirected[n]:o}function s(e){return null!==e&&"object"===t(e)&&"function"==typeof e.addUndirectedEdgeWithKey&&"function"==typeof e.dropNode}function h(e){return"object"===t(e)&&null!==e&&e.constructor===Object}function f(t){var e;for(e in t)return!1;return!0}function p(t,e,n){Object.defineProperty(t,e,{enumerable:!1,configurable:!1,writable:!0,value:n})}function l(t,e,n){var r={enumerable:!0,configurable:!0};"function"==typeof n?r.get=n:(r.value=n,r.writable=!1),Object.defineProperty(t,e,r)}function g(t){return!(!h(t)||t.attributes&&!Array.isArray(t.attributes))}function y(){}function v(){v.init.call(this)}function w(t){return void 0===t._maxListeners?v.defaultMaxListeners:t._maxListeners}function b(t,e,n){if(e)t.call(n);else for(var r=t.length,i=S(t,r),o=0;o<r;++o)i[o].call(n)}function m(t,e,n,r){if(e)t.call(n,r);else for(var i=t.length,o=S(t,i),a=0;a<i;++a)o[a].call(n,r)}function k(t,e,n,r,i){if(e)t.call(n,r,i);else for(var o=t.length,a=S(t,o),u=0;u<o;++u)a[u].call(n,r,i)}function _(t,e,n,r,i,o){if(e)t.call(n,r,i,o);else for(var a=t.length,u=S(t,a),c=0;c<a;++c)u[c].call(n,r,i,o)}function E(t,e,n,r){if(e)t.apply(n,r);else for(var i=t.length,o=S(t,i),a=0;a<i;++a)o[a].apply(n,r)}function x(t,e,n,r){var i,o,a,u;if("function"!=typeof n)throw new TypeError('"listener" argument must be a function');if((o=t._events)?(o.newListener&&(t.emit("newListener",e,n.listener?n.listener:n),o=t._events),a=o[e]):(o=t._events=new y,t._eventsCount=0),a){if("function"==typeof a?a=o[e]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),!a.warned&&(i=w(t))&&i>0&&a.length>i){a.warned=!0;var c=new Error("Possible EventEmitter memory leak detected. "+a.length+" "+e+" listeners added. Use emitter.setMaxListeners() to increase limit");c.name="MaxListenersExceededWarning",c.emitter=t,c.type=e,c.count=a.length,u=c,"function"==typeof console.warn?console.warn(u):console.log(u)}}else a=o[e]=n,++t._eventsCount;return t}function G(t,e,n){var r=!1;function i(){t.removeListener(e,i),r||(r=!0,n.apply(t,arguments))}return i.listener=n,i}function A(t){var e=this._events;if(e){var n=e[t];if("function"==typeof n)return 1;if(n)return n.length}return 0}function S(t,e){for(var n=new Array(e);e--;)n[e]=t[e];return n}function L(t){Object.defineProperty(this,"_next",{writable:!1,enumerable:!1,value:t}),this.done=!1}"function"==typeof Object.assign&&(c=Object.assign),y.prototype=Object.create(null),v.EventEmitter=v,v.usingDomains=!1,v.prototype.domain=void 0,v.prototype._events=void 0,v.prototype._maxListeners=void 0,v.defaultMaxListeners=10,v.init=function(){this.domain=null,v.usingDomains&&(void 0).active,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new y,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},v.prototype.setMaxListeners=function(t){if("number"!=typeof t||t<0||isNaN(t))throw new TypeError('"n" argument must be a positive number');return this._maxListeners=t,this},v.prototype.getMaxListeners=function(){return w(this)},v.prototype.emit=function(t){var e,n,r,i,o,a,u,c="error"===t;if(a=this._events)c=c&&null==a.error;else if(!c)return!1;if(u=this.domain,c){if(e=arguments[1],!u){if(e instanceof Error)throw e;var d=new Error('Uncaught, unspecified "error" event. ('+e+")");throw d.context=e,d}return e||(e=new Error('Uncaught, unspecified "error" event')),e.domainEmitter=this,e.domain=u,e.domainThrown=!1,u.emit("error",e),!1}if(!(n=a[t]))return!1;var s="function"==typeof n;switch(r=arguments.length){case 1:b(n,s,this);break;case 2:m(n,s,this,arguments[1]);break;case 3:k(n,s,this,arguments[1],arguments[2]);break;case 4:_(n,s,this,arguments[1],arguments[2],arguments[3]);break;default:for(i=new Array(r-1),o=1;o<r;o++)i[o-1]=arguments[o];E(n,s,this,i)}return!0},v.prototype.addListener=function(t,e){return x(this,t,e,!1)},v.prototype.on=v.prototype.addListener,v.prototype.prependListener=function(t,e){return x(this,t,e,!0)},v.prototype.once=function(t,e){if("function"!=typeof e)throw new TypeError('"listener" argument must be a function');return this.on(t,G(this,t,e)),this},v.prototype.prependOnceListener=function(t,e){if("function"!=typeof e)throw new TypeError('"listener" argument must be a function');return this.prependListener(t,G(this,t,e)),this},v.prototype.removeListener=function(t,e){var n,r,i,o,a;if("function"!=typeof e)throw new TypeError('"listener" argument must be a function');if(!(r=this._events))return this;if(!(n=r[t]))return this;if(n===e||n.listener&&n.listener===e)0==--this._eventsCount?this._events=new y:(delete r[t],r.removeListener&&this.emit("removeListener",t,n.listener||e));else if("function"!=typeof n){for(i=-1,o=n.length;o-- >0;)if(n[o]===e||n[o].listener&&n[o].listener===e){a=n[o].listener,i=o;break}if(i<0)return this;if(1===n.length){if(n[0]=void 0,0==--this._eventsCount)return this._events=new y,this;delete r[t]}else!function(t,e){for(var n=e,r=n+1,i=t.length;r<i;n+=1,r+=1)t[n]=t[r];t.pop()}(n,i);r.removeListener&&this.emit("removeListener",t,a||e)}return this},v.prototype.removeAllListeners=function(t){var e,n;if(!(n=this._events))return this;if(!n.removeListener)return 0===arguments.length?(this._events=new y,this._eventsCount=0):n[t]&&(0==--this._eventsCount?this._events=new y:delete n[t]),this;if(0===arguments.length){for(var r,i=Object.keys(n),o=0;o<i.length;++o)"removeListener"!==(r=i[o])&&this.removeAllListeners(r);return this.removeAllListeners("removeListener"),this._events=new y,this._eventsCount=0,this}if("function"==typeof(e=n[t]))this.removeListener(t,e);else if(e)do{this.removeListener(t,e[e.length-1])}while(e[0]);return this},v.prototype.listeners=function(t){var e,n=this._events;return n&&(e=n[t])?"function"==typeof e?[e.listener||e]:function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(e):[]},v.listenerCount=function(t,e){return"function"==typeof t.listenerCount?t.listenerCount(e):A.call(t,e)},v.prototype.listenerCount=A,v.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]},L.prototype.next=function(){if(this.done)return{done:!0};var t=this._next();return t.done&&(this.done=!0),t},"undefined"!=typeof Symbol&&(L.prototype[Symbol.iterator]=function(){return this}),L.of=function(){var t=arguments,e=t.length,n=0;return new L((function(){return n>=e?{done:!0}:{done:!1,value:t[n++]}}))},L.empty=function(){var t=new L(null);return t.done=!0,t},L.is=function(t){return t instanceof L||"object"==typeof t&&null!==t&&"function"==typeof t.next};var N=L,D=function(t,e){for(var n,r=arguments.length>1?e:1/0,i=r!==1/0?new Array(r):[],o=0;;){if(o===r)return i;if((n=t.next()).done)return o!==e?i.slice(0,o):i;i[o++]=n.value}},U=function(t){function n(e,n){var r;return(r=t.call(this)||this).name="GraphError",r.message=e||"",r.data=n||{},r}return e(n,t),n}(a(Error)),j=function(t){function n(e,r){var i;return(i=t.call(this,e,r)||this).name="InvalidArgumentsGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(u(i),n.prototype.constructor),i}return e(n,t),n}(U),O=function(t){function n(e,r){var i;return(i=t.call(this,e,r)||this).name="NotFoundGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(u(i),n.prototype.constructor),i}return e(n,t),n}(U),z=function(t){function n(e,r){var i;return(i=t.call(this,e,r)||this).name="UsageGraphError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(u(i),n.prototype.constructor),i}return e(n,t),n}(U);function C(t,e){this.key=t,this.attributes=e,this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.directedSelfLoops=0,this.undirectedSelfLoops=0,this.in={},this.out={},this.undirected={}}function M(t,e){this.key=t,this.attributes=e,this.inDegree=0,this.outDegree=0,this.directedSelfLoops=0,this.in={},this.out={}}function K(t,e){this.key=t,this.attributes=e,this.undirectedDegree=0,this.undirectedSelfLoops=0,this.undirected={}}function T(t,e,n,r,i,o){this.key=e,this.attributes=o,this.undirected=t,this.source=r,this.target=i,this.generatedKey=n}function I(t,e,n,r,i,o,a){var u,c,d="out",s="in";if(e&&(d=s="undirected"),t.multi){if(void 0===(c=(u=o[d])[i])&&(c=new Set,u[i]=c),c.add(n),r===i&&e)return;void 0===(u=a[s])[r]&&(u[r]=c)}else{if(o[d][i]=n,r===i&&e)return;a[s][r]=n}}function P(t,e,n){var r=t.multi,i=n.source,o=n.target,a=i.key,u=o.key,c=i[e?"undirected":"out"],d=e?"undirected":"in";if(u in c)if(r){var s=c[u];1===s.size?(delete c[u],delete o[d][a]):s.delete(n)}else delete c[u];r||delete o[d][a]}M.prototype.upgradeToMixed=function(){this.undirectedDegree=0,this.undirectedSelfLoops=0,this.undirected={}},K.prototype.upgradeToMixed=function(){this.inDegree=0,this.outDegree=0,this.directedSelfLoops=0,this.in={},this.out={}};var R=[{name:function(t){return"get".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else if(t=""+t,!(i=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if("mixed"!==n&&i.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return i.attributes[r]}}},{name:function(t){return"get".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t){var r;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>1){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var i=""+t,o=""+arguments[1];if(!(r=d(this,i,o,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(i,'" - "').concat(o,'").'))}else if(t=""+t,!(r=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if("mixed"!==n&&r.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return r.attributes}}},{name:function(t){return"has".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else if(t=""+t,!(i=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if("mixed"!==n&&i.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return i.attributes.hasOwnProperty(r)}}},{name:function(t){return"set".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>3){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var a=""+t,u=""+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,u,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(a,'" - "').concat(u,'").'))}else if(t=""+t,!(o=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if("mixed"!==n&&o.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return o.attributes[r]=i,this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}},{name:function(t){return"update".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>3){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var a=""+t,u=""+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,u,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(a,'" - "').concat(u,'").'))}else if(t=""+t,!(o=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if("function"!=typeof i)throw new j("Graph.".concat(e,": updater should be a function."));if("mixed"!==n&&o.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return o.attributes[r]=i(o.attributes[r]),this.emit("edgeAttributesUpdated",{key:o.key,type:"set",attributes:o.attributes,name:r}),this}}},{name:function(t){return"remove".concat(t,"Attribute")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else if(t=""+t,!(i=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if("mixed"!==n&&i.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return delete i.attributes[r],this.emit("edgeAttributesUpdated",{key:i.key,type:"remove",attributes:i.attributes,name:r}),this}}},{name:function(t){return"replace".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else if(t=""+t,!(i=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if(!h(r))throw new j("Graph.".concat(e,": provided attributes are not a plain object."));if("mixed"!==n&&i.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return i.attributes=r,this.emit("edgeAttributesUpdated",{key:i.key,type:"replace",attributes:i.attributes}),this}}},{name:function(t){return"merge".concat(t,"Attributes")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if("mixed"!==this.type&&"mixed"!==n&&n!==this.type)throw new z("Graph.".concat(e,": cannot find this type of edges in your ").concat(this.type," graph."));if(arguments.length>2){if(this.multi)throw new z("Graph.".concat(e,": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about."));var o=""+t,a=""+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new O("Graph.".concat(e,': could not find an edge for the given path ("').concat(o,'" - "').concat(a,'").'))}else if(t=""+t,!(i=this._edges.get(t)))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" edge in the graph.'));if(!h(r))throw new j("Graph.".concat(e,": provided attributes are not a plain object."));if("mixed"!==n&&i.undirected!==("undirected"===n))throw new O("Graph.".concat(e,': could not find the "').concat(t,'" ').concat(n," edge in the graph."));return c(i.attributes,r),this.emit("edgeAttributesUpdated",{key:i.key,type:"merge",attributes:i.attributes,data:r}),this}}}],W=function(){var t,e=arguments,n=-1;return new N((function r(){if(!t){if(++n>=e.length)return{done:!0};t=e[n]}var i=t.next();return i.done?(t=null,r()):i}))},B=[{name:"edges",type:"mixed"},{name:"inEdges",type:"directed",direction:"in"},{name:"outEdges",type:"directed",direction:"out"},{name:"inboundEdges",type:"mixed",direction:"in"},{name:"outboundEdges",type:"mixed",direction:"out"},{name:"directedEdges",type:"directed"},{name:"undirectedEdges",type:"undirected"}];function F(t,e){for(var n in e)t.push(e[n].key)}function q(t,e){for(var n in e)e[n].forEach((function(e){return t.push(e.key)}))}function H(t,e,n){for(var r in t)if(r!==n){var i=t[r];e(i.key,i.attributes,i.source.key,i.target.key,i.source.attributes,i.target.attributes,i.undirected,i.generatedKey)}}function J(t,e,n){for(var r in t)r!==n&&t[r].forEach((function(t){return e(t.key,t.attributes,t.source.key,t.target.key,t.source.attributes,t.target.attributes,t.undirected,t.generatedKey)}))}function V(t,e,n){for(var r in t)if(r!==n){var i=t[r];if(e(i.key,i.attributes,i.source.key,i.target.key,i.source.attributes,i.target.attributes,i.undirected,i.generatedKey))return!0}return!1}function Y(t,e,n){var r,i,o,a,u;for(var c in t)if(c!==n)for(r=t[c].values();!0!==(i=r.next()).done;)if(a=(o=i.value).source,u=o.target,e(o.key,o.attributes,a.key,u.key,a.attributes,u.attributes,o.undirected,o.generatedKey))return!0;return!1}function Q(t,e){var n=Object.keys(t),r=n.length,i=null,o=0;return new N((function a(){var u;if(i){var c=i.next();if(c.done)return i=null,o++,a();u=c.value}else{if(o>=r)return{done:!0};var d=n[o];if(d===e)return o++,a();if((u=t[d])instanceof Set)return i=u.values(),a();o++}return{done:!1,value:[u.key,u.attributes,u.source.key,u.target.key,u.source.attributes,u.target.attributes]}}))}function X(t,e,n){var r=e[n];r&&t.push(r.key)}function Z(t,e,n){var r=e[n];r&&r.forEach((function(e){return t.push(e.key)}))}function $(t,e,n){var r=t[e];if(r){var i=r.source,o=r.target;n(r.key,r.attributes,i.key,o.key,i.attributes,o.attributes,r.undirected,r.generatedKey)}}function tt(t,e,n){var r=t[e];r&&r.forEach((function(t){return n(t.key,t.attributes,t.source.key,t.target.key,t.source.attributes,t.target.attributes,t.undirected,t.generatedKey)}))}function et(t,e,n){var r=t[e];if(r){var i=r.source,o=r.target;return n(r.key,r.attributes,i.key,o.key,i.attributes,o.attributes,r.undirected,r.generatedKey)}}function nt(t,e,n){var r=t[e];if(r){for(var i,o,a=r.values();!0!==(i=a.next()).done;)if(n((o=i.value).key,o.attributes,o.source.key,o.target.key,o.source.attributes,o.target.attributes,o.undirected,o.generatedKey))return!0;return!1}}function rt(t,e){var n=t[e];if(n instanceof Set){var r=n.values();return new N((function(){var t=r.next();if(t.done)return t;var e=t.value;return{done:!1,value:[e.key,e.attributes,e.source.key,e.target.key,e.source.attributes,e.target.attributes]}}))}return N.of([n.key,n.attributes,n.source.key,n.target.key,n.source.attributes,n.target.attributes])}function it(t,e){if(0===t.size)return[];if("mixed"===e||e===t.type)return"function"==typeof Array.from?Array.from(t._edges.keys()):D(t._edges.keys(),t._edges.size);for(var n,r,i="undirected"===e?t.undirectedSize:t.directedSize,o=new Array(i),a="undirected"===e,u=t._edges.values(),c=0;!0!==(n=u.next()).done;)(r=n.value).undirected===a&&(o[c++]=r.key);return o}function ot(t,e,n){if(0!==t.size)for(var r,i,o="mixed"!==e&&e!==t.type,a="undirected"===e,u=t._edges.values();!0!==(r=u.next()).done;)if(i=r.value,!o||i.undirected===a){var c=i,d=c.key,s=c.attributes,h=c.source,f=c.target;n(d,s,h.key,f.key,h.attributes,f.attributes,i.undirected,i.generatedKey)}}function at(t,e,n){if(0!==t.size)for(var r,i,o="mixed"!==e&&e!==t.type,a="undirected"===e,u=t._edges.values();!0!==(r=u.next()).done;)if(i=r.value,!o||i.undirected===a){var c=i,d=c.key,s=c.attributes,h=c.source,f=c.target;if(n(d,s,h.key,f.key,h.attributes,f.attributes,i.undirected,i.generatedKey))break}}function ut(t,e){if(0===t.size)return N.empty();var n="mixed"!==e&&e!==t.type,r="undirected"===e,i=t._edges.values();return new N((function(){for(var t,e;;){if((t=i.next()).done)return t;if(e=t.value,!n||e.undirected===r)break}return{value:[e.key,e.attributes,e.source.key,e.target.key,e.source.attributes,e.target.attributes],done:!1}}))}function ct(t,e,n,r){var i=[],o=t?q:F;return"undirected"!==e&&("out"!==n&&o(i,r.in),"in"!==n&&o(i,r.out),!n&&r.directedSelfLoops>0&&i.splice(i.lastIndexOf(r.key),1)),"directed"!==e&&o(i,r.undirected),i}function dt(t,e,n,r,i){var o=t?J:H;"undirected"!==e&&("out"!==n&&o(r.in,i),"in"!==n&&o(r.out,i,n?null:r.key)),"directed"!==e&&o(r.undirected,i)}function st(t,e,n,r,i){var o=t?Y:V;if("undirected"!==e){if("out"!==n&&o(r.in,i))return;if("in"!==n&&o(r.out,i,n?null:r.key))return}"directed"===e||o(r.undirected,i)}function ht(t,e,n){var r=N.empty();return"undirected"!==t&&("out"!==e&&void 0!==n.in&&(r=W(r,Q(n.in))),"in"!==e&&void 0!==n.out&&(r=W(r,Q(n.out,e?null:n.key)))),"directed"!==t&&void 0!==n.undirected&&(r=W(r,Q(n.undirected))),r}function ft(t,e,n,r,i){var o=e?Z:X,a=[];return"undirected"!==t&&(void 0!==r.in&&"out"!==n&&o(a,r.in,i),void 0!==r.out&&"in"!==n&&o(a,r.out,i),!n&&r.directedSelfLoops>0&&a.splice(a.lastIndexOf(r.key),1)),"directed"!==t&&void 0!==r.undirected&&o(a,r.undirected,i),a}function pt(t,e,n,r,i,o){var a=e?tt:$;"undirected"!==t&&(void 0!==r.in&&"out"!==n&&a(r.in,i,o),r.key!==i&&void 0!==r.out&&"in"!==n&&a(r.out,i,o)),"directed"!==t&&void 0!==r.undirected&&a(r.undirected,i,o)}function lt(t,e,n,r,i,o){var a=e?nt:et;if("undirected"!==t){if(void 0!==r.in&&"out"!==n&&a(r.in,i,o))return;if(r.key!==i&&void 0!==r.out&&"in"!==n&&a(r.out,i,o,n?null:r.key))return}"directed"===t||void 0===r.undirected||a(r.undirected,i,o)}function gt(t,e,n,r){var i=N.empty();return"undirected"!==t&&(void 0!==n.in&&"out"!==e&&r in n.in&&(i=W(i,rt(n.in,r))),void 0!==n.out&&"in"!==e&&r in n.out&&(i=W(i,rt(n.out,r)))),"directed"!==t&&void 0!==n.undirected&&r in n.undirected&&(i=W(i,rt(n.undirected,r))),i}var yt=[{name:"neighbors",type:"mixed"},{name:"inNeighbors",type:"directed",direction:"in"},{name:"outNeighbors",type:"directed",direction:"out"},{name:"inboundNeighbors",type:"mixed",direction:"in"},{name:"outboundNeighbors",type:"mixed",direction:"out"},{name:"directedNeighbors",type:"directed"},{name:"undirectedNeighbors",type:"undirected"}];function vt(t,e){if(void 0!==e)for(var n in e)t.add(n)}function wt(t,e,n){if("mixed"!==t){if("undirected"===t)return Object.keys(n.undirected);if("string"==typeof e)return Object.keys(n[e])}var r=new Set;return"undirected"!==t&&("out"!==e&&vt(r,n.in),"in"!==e&&vt(r,n.out)),"directed"!==t&&vt(r,n.undirected),D(r.values(),r.size)}function bt(t,e,n){for(var r in e){var i=e[r];i instanceof Set&&(i=i.values().next().value);var o=i.source,a=i.target,u=o===t?a:o;n(u.key,u.attributes)}}function mt(t,e,n,r){for(var i in n){var o=n[i];o instanceof Set&&(o=o.values().next().value);var a=o.source,u=o.target,c=a===e?u:a;t.has(c.key)||(t.add(c.key),r(c.key,c.attributes))}}function kt(t,e,n){for(var r in e){var i=e[r];i instanceof Set&&(i=i.values().next().value);var o=i.source,a=i.target,u=o===t?a:o;if(n(u.key,u.attributes))return!0}return!1}function _t(t,e,n,r){for(var i in n){var o=n[i];o instanceof Set&&(o=o.values().next().value);var a=o.source,u=o.target,c=a===e?u:a;if(!t.has(c.key)&&(t.add(c.key),r(c.key,c.attributes)))return!0}return!1}function Et(t,e){var n=Object.keys(e),r=n.length,i=0;return new N((function(){if(i>=r)return{done:!0};var o=e[n[i++]];o instanceof Set&&(o=o.values().next().value);var a=o.source,u=o.target,c=a===t?u:a;return{done:!1,value:[c.key,c.attributes]}}))}function xt(t,e,n){var r=Object.keys(n),i=r.length,o=0;return new N((function a(){if(o>=i)return{done:!0};var u=n[r[o++]];u instanceof Set&&(u=u.values().next().value);var c=u.source,d=u.target,s=c===e?d:c;return t.has(s.key)?a():(t.add(s.key),{done:!1,value:[s.key,s.attributes]})}))}function Gt(t,e,n,r,i){var o=t._nodes.get(r);if("undirected"!==e){if("out"!==n&&void 0!==o.in)for(var a in o.in)if(a===i)return!0;if("in"!==n&&void 0!==o.out)for(var u in o.out)if(u===i)return!0}if("directed"!==e&&void 0!==o.undirected)for(var c in o.undirected)if(c===i)return!0;return!1}function At(t,e,n){for(var r,i,o,a,u,c,d,s=e._nodes.values(),h=e.type;!0!==(r=s.next()).done;){if(i=r.value,"undirected"!==h)for(o in a=i.out)if(c=(u=a[o]).target,d=n(i.key,c.key,i.attributes,c.attributes,u.key,u.attributes,u.undirected,u.generatedKey),t&&d)return;if("directed"!==h)for(o in a=i.undirected)if((c=(u=a[o]).target).key!==o&&(c=u.source),d=n(i.key,c.key,i.attributes,c.attributes,u.key,u.attributes,u.undirected,u.generatedKey),t&&d)return}}function St(t,e,n){for(var r,i,o,a,u,c,d,s,h,f=e._nodes.values(),p=e.type;!0!==(r=f.next()).done;){if(i=r.value,"undirected"!==p)for(o in c=i.out)for(a=c[o].values();!0!==(u=a.next()).done;)if(s=(d=u.value).target,h=n(i.key,s.key,i.attributes,s.attributes,d.key,d.attributes,d.undirected,d.generatedKey),t&&h)return;if("directed"!==p)for(o in c=i.undirected)for(a=c[o].values();!0!==(u=a.next()).done;)if((s=(d=u.value).target).key!==o&&(s=d.source),h=n(i.key,s.key,i.attributes,s.attributes,d.key,d.attributes,d.undirected,d.generatedKey),t&&h)return}}function Lt(t,e){var n={key:t};return f(e.attributes)||(n.attributes=c({},e.attributes)),n}function Nt(t,e){var n={source:e.source.key,target:e.target.key};return e.generatedKey||(n.key=t),f(e.attributes)||(n.attributes=c({},e.attributes)),e.undirected&&(n.undirected=!0),n}function Dt(t){return h(t)?"key"in t?!("attributes"in t)||h(t.attributes)&&null!==t.attributes?null:"invalid-attributes":"no-key":"not-object"}function Ut(t){return h(t)?"source"in t?"target"in t?!("attributes"in t)||h(t.attributes)&&null!==t.attributes?"undirected"in t&&"boolean"!=typeof t.undirected?"invalid-undirected":null:"invalid-attributes":"no-target":"no-source":"not-object"}var jt=new Set(["directed","undirected","mixed"]),Ot=new Set(["domain","_events","_eventsCount","_maxListeners"]),zt={allowSelfLoops:!0,edgeKeyGenerator:null,multi:!1,type:"mixed"};function Ct(t,e,n){var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit("nodeAdded",{key:e,attributes:n}),r}function Mt(t,e,n,r,i,o,a,u){if(!r&&"undirected"===t.type)throw new z("Graph.".concat(e,": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead."));if(r&&"directed"===t.type)throw new z("Graph.".concat(e,": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead."));if(u&&!h(u))throw new j("Graph.".concat(e,': invalid attributes. Expecting an object but got "').concat(u,'"'));if(o=""+o,a=""+a,u=u||{},!t.allowSelfLoops&&o===a)throw new z("Graph.".concat(e,': source & target are the same ("').concat(o,"\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false."));var c=t._nodes.get(o),d=t._nodes.get(a);if(!c)throw new O("Graph.".concat(e,': source node "').concat(o,'" not found.'));if(!d)throw new O("Graph.".concat(e,': target node "').concat(a,'" not found.'));var s={key:null,undirected:r,source:o,target:a,attributes:u};if(n&&(i=t._edgeKeyGenerator(s)),i=""+i,t._edges.has(i))throw new z("Graph.".concat(e,': the "').concat(i,'" edge already exists in the graph.'));if(!t.multi&&(r?void 0!==c.undirected[a]:void 0!==c.out[a]))throw new z("Graph.".concat(e,': an edge linking "').concat(o,'" to "').concat(a,"\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option."));var f=new T(r,i,n,c,d,u);return t._edges.set(i,f),o===a?r?(c.undirectedSelfLoops++,t._undirectedSelfLoopCount++):(c.directedSelfLoops++,t._directedSelfLoopCount++):r?(c.undirectedDegree++,d.undirectedDegree++):(c.outDegree++,d.inDegree++),I(t,r,f,o,a,c,d),r?t._undirectedSize++:t._directedSize++,s.key=i,t.emit("edgeAdded",s),i}function Kt(t,e,n,r,i,o,a,u,d){if(!r&&"undirected"===t.type)throw new z("Graph.".concat(e,": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead."));if(r&&"directed"===t.type)throw new z("Graph.".concat(e,": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead."));if(u)if(d){if("function"!=typeof u)throw new j("Graph.".concat(e,': invalid updater function. Expecting a function but got "').concat(u,'"'))}else if(!h(u))throw new j("Graph.".concat(e,': invalid attributes. Expecting an object but got "').concat(u,'"'));var s;if(o=""+o,a=""+a,d&&(s=u,u=void 0),!t.allowSelfLoops&&o===a)throw new z("Graph.".concat(e,': source & target are the same ("').concat(o,"\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false."));var f,p,l=t._nodes.get(o),g=t._nodes.get(a);if(!n&&(f=t._edges.get(i))){if(f.source.key!==o||f.target.key!==a||r&&(f.source.key!==a||f.target.key!==o))throw new z("Graph.".concat(e,': inconsistency detected when attempting to merge the "').concat(i,'" edge with "').concat(o,'" source & "').concat(a,'" target vs. ("').concat(f.source.key,'", "').concat(f.target.key,'").'));p=f}if(p||t.multi||!l||(p=r?l.undirected[a]:l.out[a]),p){if(d?!s:!u)return p.key;if(d){var y=p.attributes;p.attributes=s(y),t.emit("edgeAttributesUpdated",{type:"replace",key:p.key,attributes:p.attributes})}else c(p.attributes,u),t.emit("edgeAttributesUpdated",{type:"merge",key:p.key,attributes:p.attributes,data:u});return p.key}u=u||{},d&&s&&(u=s(u));var v={key:null,undirected:r,source:o,target:a,attributes:u};if(n&&(i=t._edgeKeyGenerator(v)),i=""+i,t._edges.has(i))throw new z("Graph.".concat(e,': the "').concat(i,'" edge already exists in the graph.'));return l||(l=Ct(t,o,{}),o===a&&(g=l)),g||(g=Ct(t,a,{})),f=new T(r,i,n,l,g,u),t._edges.set(i,f),o===a?r?(l.undirectedSelfLoops++,t._undirectedSelfLoopCount++):(l.directedSelfLoops++,t._directedSelfLoopCount++):r?(l.undirectedDegree++,g.undirectedDegree++):(l.outDegree++,g.inDegree++),I(t,r,f,o,a,l,g),r?t._undirectedSize++:t._directedSize++,v.key=i,t.emit("edgeAdded",v),i}var Tt=function(t){function n(e){var n;if(n=t.call(this)||this,(e=c({},zt,e)).edgeKeyGenerator&&"function"!=typeof e.edgeKeyGenerator)throw new j("Graph.constructor: invalid 'edgeKeyGenerator' option. Expecting a function but got \"".concat(e.edgeKeyGenerator,'".'));if("boolean"!=typeof e.multi)throw new j("Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"".concat(e.multi,'".'));if(!jt.has(e.type))throw new j('Graph.constructor: invalid \'type\' option. Should be one of "mixed", "directed" or "undirected" but got "'.concat(e.type,'".'));if("boolean"!=typeof e.allowSelfLoops)throw new j("Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"".concat(e.allowSelfLoops,'".'));var r,i="mixed"===e.type?C:"directed"===e.type?M:K;return p(u(n),"NodeDataClass",i),p(u(n),"_attributes",{}),p(u(n),"_nodes",new Map),p(u(n),"_edges",new Map),p(u(n),"_directedSize",0),p(u(n),"_undirectedSize",0),p(u(n),"_directedSelfLoopCount",0),p(u(n),"_undirectedSelfLoopCount",0),p(u(n),"_edgeKeyGenerator",e.edgeKeyGenerator||(r=0,function(){return"_geid".concat(r++,"_")})),p(u(n),"_options",e),Ot.forEach((function(t){return p(u(n),t,n[t])})),l(u(n),"order",(function(){return n._nodes.size})),l(u(n),"size",(function(){return n._edges.size})),l(u(n),"directedSize",(function(){return n._directedSize})),l(u(n),"undirectedSize",(function(){return n._undirectedSize})),l(u(n),"selfLoopCount",(function(){return n._directedSelfLoopCount+n._undirectedSelfLoopCount})),l(u(n),"directedSelfLoopCount",(function(){return n._directedSelfLoopCount})),l(u(n),"undirectedSelfLoopCount",(function(){return n._undirectedSelfLoopCount})),l(u(n),"multi",n._options.multi),l(u(n),"type",n._options.type),l(u(n),"allowSelfLoops",n._options.allowSelfLoops),l(u(n),"implementation",(function(){return"graphology"})),n}e(n,t);var r=n.prototype;return r.hasNode=function(t){return this._nodes.has(""+t)},r.hasDirectedEdge=function(t,e){if("undirected"===this.type)return!1;if(1===arguments.length){var n=""+t,r=this._edges.get(n);return!!r&&!r.undirected}if(2===arguments.length){t=""+t,e=""+e;var i=this._nodes.get(t);if(!i)return!1;var o=i.out[e];return!(!o||this.multi&&!o.size)}throw new j("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},r.hasUndirectedEdge=function(t,e){if("directed"===this.type)return!1;if(1===arguments.length){var n=""+t,r=this._edges.get(n);return!!r&&r.undirected}if(2===arguments.length){t=""+t,e=""+e;var i=this._nodes.get(t);if(!i)return!1;var o=i.undirected[e];return!(!o||this.multi&&!o.size)}throw new j("Graph.hasDirectedEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},r.hasEdge=function(t,e){if(1===arguments.length){var n=""+t;return this._edges.has(n)}if(2===arguments.length){t=""+t,e=""+e;var r=this._nodes.get(t);if(!r)return!1;var i=void 0!==r.out&&r.out[e];return i||(i=void 0!==r.undirected&&r.undirected[e]),!(!i||this.multi&&!i.size)}throw new j("Graph.hasEdge: invalid arity (".concat(arguments.length,", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target."))},r.directedEdge=function(t,e){if("undirected"!==this.type){if(t=""+t,e=""+e,this.multi)throw new z("Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.");var n=this._nodes.get(t);if(!n)throw new O('Graph.directedEdge: could not find the "'.concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new O('Graph.directedEdge: could not find the "'.concat(e,'" target node in the graph.'));var r=n.out&&n.out[e]||void 0;return r?r.key:void 0}},r.undirectedEdge=function(t,e){if("directed"!==this.type){if(t=""+t,e=""+e,this.multi)throw new z("Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.");var n=this._nodes.get(t);if(!n)throw new O('Graph.undirectedEdge: could not find the "'.concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new O('Graph.undirectedEdge: could not find the "'.concat(e,'" target node in the graph.'));var r=n.undirected&&n.undirected[e]||void 0;return r?r.key:void 0}},r.edge=function(t,e){if(this.multi)throw new z("Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.");t=""+t,e=""+e;var n=this._nodes.get(t);if(!n)throw new O('Graph.edge: could not find the "'.concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new O('Graph.edge: could not find the "'.concat(e,'" target node in the graph.'));var r=n.out&&n.out[e]||n.undirected&&n.undirected[e]||void 0;if(r)return r.key},r.inDegree=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if("boolean"!=typeof e)throw new j('Graph.inDegree: Expecting a boolean but got "'.concat(e,'" for the second parameter (allowing self-loops to be counted).'));t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.inDegree: could not find the "'.concat(t,'" node in the graph.'));if("undirected"===this.type)return 0;var r=e?n.directedSelfLoops:0;return n.inDegree+r},r.outDegree=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if("boolean"!=typeof e)throw new j('Graph.outDegree: Expecting a boolean but got "'.concat(e,'" for the second parameter (allowing self-loops to be counted).'));t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.outDegree: could not find the "'.concat(t,'" node in the graph.'));if("undirected"===this.type)return 0;var r=e?n.directedSelfLoops:0;return n.outDegree+r},r.directedDegree=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if("boolean"!=typeof e)throw new j('Graph.directedDegree: Expecting a boolean but got "'.concat(e,'" for the second parameter (allowing self-loops to be counted).'));t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.directedDegree: could not find the "'.concat(t,'" node in the graph.'));if("undirected"===this.type)return 0;var r=e?n.directedSelfLoops:0;return n.inDegree+r+(n.outDegree+r)},r.undirectedDegree=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if("boolean"!=typeof e)throw new j('Graph.undirectedDegree: Expecting a boolean but got "'.concat(e,'" for the second parameter (allowing self-loops to be counted).'));t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.undirectedDegree: could not find the "'.concat(t,'" node in the graph.'));if("directed"===this.type)return 0;var r=e?n.undirectedSelfLoops:0;return n.undirectedDegree+2*r},r.degree=function(t){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if("boolean"!=typeof e)throw new j('Graph.degree: Expecting a boolean but got "'.concat(e,'" for the second parameter (allowing self-loops to be counted).'));t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.degree: could not find the "'.concat(t,'" node in the graph.'));var r=0,i=0;return"directed"!==this.type&&(e&&(i=n.undirectedSelfLoops),r+=n.undirectedDegree+2*i),"undirected"!==this.type&&(e&&(i=n.directedSelfLoops),r+=n.inDegree+n.outDegree+2*i),r},r.source=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.source: could not find the "'.concat(t,'" edge in the graph.'));return e.source.key},r.target=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.target: could not find the "'.concat(t,'" edge in the graph.'));return e.target.key},r.extremities=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.extremities: could not find the "'.concat(t,'" edge in the graph.'));return[e.source.key,e.target.key]},r.opposite=function(t,e){t=""+t,e=""+e;var n=this._edges.get(e);if(!n)throw new O('Graph.opposite: could not find the "'.concat(e,'" edge in the graph.'));var r=n.source.key,i=n.target.key;if(t!==r&&t!==i)throw new O('Graph.opposite: the "'.concat(t,'" node is not attached to the "').concat(e,'" edge (').concat(r,", ").concat(i,")."));return t===r?i:r},r.hasExtremity=function(t,e){t=""+t,e=""+e;var n=this._edges.get(t);if(!n)throw new O('Graph.hasExtremity: could not find the "'.concat(t,'" edge in the graph.'));return n.source.key===e||n.target.key===e},r.isUndirected=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.isUndirected: could not find the "'.concat(t,'" edge in the graph.'));return e.undirected},r.isDirected=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.isDirected: could not find the "'.concat(t,'" edge in the graph.'));return!e.undirected},r.isSelfLoop=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.isSelfLoop: could not find the "'.concat(t,'" edge in the graph.'));return e.source===e.target},r.hasGeneratedKey=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.hasGeneratedKey: could not find the "'.concat(t,'" edge in the graph.'));return e.generatedKey},r.addNode=function(t,e){return function(t,e,n){if(n&&!h(n))throw new j('Graph.addNode: invalid attributes. Expecting an object but got "'.concat(n,'"'));if(e=""+e,n=n||{},t._nodes.has(e))throw new z('Graph.addNode: the "'.concat(e,'" node already exist in the graph.'));var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit("nodeAdded",{key:e,attributes:n}),r}(this,t,e).key},r.mergeNode=function(t,e){if(e&&!h(e))throw new j('Graph.mergeNode: invalid attributes. Expecting an object but got "'.concat(e,'"'));t=""+t,e=e||{};var n=this._nodes.get(t);return n?(e&&(c(n.attributes,e),this.emit("nodeAttributesUpdated",{type:"merge",key:t,attributes:n.attributes,data:e})),t):(n=new this.NodeDataClass(t,e),this._nodes.set(t,n),this.emit("nodeAdded",{key:t,attributes:e}),t)},r.updateNode=function(t,e){if(e&&"function"!=typeof e)throw new j('Graph.updateNode: invalid updater function. Expecting a function but got "'.concat(e,'"'));t=""+t;var n=this._nodes.get(t);if(n){if(e){var r=n.attributes;n.attributes=e(r),this.emit("nodeAttributesUpdated",{type:"replace",key:t,attributes:n.attributes})}return t}var i=e?e({}):{};return n=new this.NodeDataClass(t,i),this._nodes.set(t,n),this.emit("nodeAdded",{key:t,attributes:i}),t},r.dropNode=function(t){var e=this;t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.dropNode: could not find the "'.concat(t,'" node in the graph.'));this.forEachEdge(t,(function(t){e.dropEdge(t)})),this._nodes.delete(t),this.emit("nodeDropped",{key:t,attributes:n.attributes})},r.dropEdge=function(t){var e;if(arguments.length>1){var n=""+arguments[0],r=""+arguments[1];if(!(e=d(this,n,r,this.type)))throw new O('Graph.dropEdge: could not find the "'.concat(n,'" -> "').concat(r,'" edge in the graph.'))}else if(t=""+t,!(e=this._edges.get(t)))throw new O('Graph.dropEdge: could not find the "'.concat(t,'" edge in the graph.'));this._edges.delete(e.key);var i=e,o=i.source,a=i.target,u=i.attributes,c=e.undirected;return o===a?c?(o.undirectedSelfLoops--,this._undirectedSelfLoopCount--):(o.directedSelfLoops--,this._directedSelfLoopCount--):c?(o.undirectedDegree--,a.undirectedDegree--):(o.outDegree--,a.inDegree--),P(this,c,e),c?this._undirectedSize--:this._directedSize--,this.emit("edgeDropped",{key:t,attributes:u,source:o.key,target:a.key,undirected:c}),this},r.clear=function(){this._edges.clear(),this._nodes.clear(),this.emit("cleared")},r.clearEdges=function(){this._edges.clear(),this.clearIndex(),this.emit("edgesCleared")},r.getAttribute=function(t){return this._attributes[t]},r.getAttributes=function(){return this._attributes},r.hasAttribute=function(t){return this._attributes.hasOwnProperty(t)},r.setAttribute=function(t,e){return this._attributes[t]=e,this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:t}),this},r.updateAttribute=function(t,e){if("function"!=typeof e)throw new j("Graph.updateAttribute: updater should be a function.");var n=this._attributes[t];return this._attributes[t]=e(n),this.emit("attributesUpdated",{type:"set",attributes:this._attributes,name:t}),this},r.removeAttribute=function(t){return delete this._attributes[t],this.emit("attributesUpdated",{type:"remove",attributes:this._attributes,name:t}),this},r.replaceAttributes=function(t){if(!h(t))throw new j("Graph.replaceAttributes: provided attributes are not a plain object.");return this._attributes=t,this.emit("attributesUpdated",{type:"replace",attributes:this._attributes}),this},r.mergeAttributes=function(t){if(!h(t))throw new j("Graph.mergeAttributes: provided attributes are not a plain object.");return c(this._attributes,t),this.emit("attributesUpdated",{type:"merge",attributes:this._attributes,data:t}),this},r.getNodeAttribute=function(t,e){t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.getNodeAttribute: could not find the "'.concat(t,'" node in the graph.'));return n.attributes[e]},r.getNodeAttributes=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new O('Graph.getNodeAttributes: could not find the "'.concat(t,'" node in the graph.'));return e.attributes},r.hasNodeAttribute=function(t,e){t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.hasNodeAttribute: could not find the "'.concat(t,'" node in the graph.'));return n.attributes.hasOwnProperty(e)},r.setNodeAttribute=function(t,e,n){t=""+t;var r=this._nodes.get(t);if(!r)throw new O('Graph.setNodeAttribute: could not find the "'.concat(t,'" node in the graph.'));if(arguments.length<3)throw new j("Graph.setNodeAttribute: not enough arguments. Either you forgot to pass the attribute's name or value, or you meant to use #.replaceNodeAttributes / #.mergeNodeAttributes instead.");return r.attributes[e]=n,this.emit("nodeAttributesUpdated",{key:t,type:"set",attributes:r.attributes,name:e}),this},r.updateNodeAttribute=function(t,e,n){t=""+t;var r=this._nodes.get(t);if(!r)throw new O('Graph.updateNodeAttribute: could not find the "'.concat(t,'" node in the graph.'));if(arguments.length<3)throw new j("Graph.updateNodeAttribute: not enough arguments. Either you forgot to pass the attribute's name or updater, or you meant to use #.replaceNodeAttributes / #.mergeNodeAttributes instead.");if("function"!=typeof n)throw new j("Graph.updateAttribute: updater should be a function.");var i=r.attributes,o=n(i[e]);return i[e]=o,this.emit("nodeAttributesUpdated",{key:t,type:"set",attributes:r.attributes,name:e}),this},r.removeNodeAttribute=function(t,e){t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.hasNodeAttribute: could not find the "'.concat(t,'" node in the graph.'));return delete n.attributes[e],this.emit("nodeAttributesUpdated",{key:t,type:"remove",attributes:n.attributes,name:e}),this},r.replaceNodeAttributes=function(t,e){t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.replaceNodeAttributes: could not find the "'.concat(t,'" node in the graph.'));if(!h(e))throw new j("Graph.replaceNodeAttributes: provided attributes are not a plain object.");return n.attributes=e,this.emit("nodeAttributesUpdated",{key:t,type:"replace",attributes:n.attributes}),this},r.mergeNodeAttributes=function(t,e){t=""+t;var n=this._nodes.get(t);if(!n)throw new O('Graph.mergeNodeAttributes: could not find the "'.concat(t,'" node in the graph.'));if(!h(e))throw new j("Graph.mergeNodeAttributes: provided attributes are not a plain object.");return c(n.attributes,e),this.emit("nodeAttributesUpdated",{key:t,type:"merge",attributes:n.attributes,data:e}),this},r.updateEachNodeAttributes=function(t,e){if("function"!=typeof t)throw new j("Graph.updateEachNodeAttributes: expecting an updater function.");if(e&&!g(e))throw new j("Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");for(var n,r,i=this._nodes.values();!0!==(n=i.next()).done;)(r=n.value).attributes=t(r.key,r.attributes);this.emit("eachNodeAttributesUpdated",{hints:e||null})},r.updateEachEdgeAttributes=function(t,e){if("function"!=typeof t)throw new j("Graph.updateEachEdgeAttributes: expecting an updater function.");if(e&&!g(e))throw new j("Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}");for(var n,r,i=this._edges.values();!0!==(n=i.next()).done;)(r=n.value).attributes=t(r.key,r.attributes);this.emit("eachEdgeAttributesUpdated",{hints:e||null})},r.forEach=function(t){if("function"!=typeof t)throw new j("Graph.forEach: expecting a callback.");this.multi?St(!1,this,t):At(!1,this,t)},r.forEachUntil=function(t){if("function"!=typeof t)throw new j("Graph.forEach: expecting a callback.");this.multi?St(!0,this,t):At(!0,this,t)},r.adjacency=function(){return this.multi?(o=(t=this)._nodes.values(),a=t.type,u="outer",c=null,new N((function t(){var d;if("outer"===u)return!0===(d=o.next()).done?d:(e=d.value,u="directed",t());if("directed"===u)return"undirected"===a?(u="undirected",t()):(r=e.out,n=Object.keys(e.out),i=0,u="inner-directed",t());if("undirected"===u){if("directed"===a)return u="outer",t();r=e.undirected,n=Object.keys(e.undirected),i=0,u="inner-undirected"}if(!c&&i>=n.length)return u="inner-undirected"===u?"outer":"undirected",t();if(!c){var s=n[i++];return c=r[s].values(),t()}if((d=c.next()).done)return c=null,t();var h=d.value,f=h.target;return"inner-undirected"===u&&f.key===e.key&&(f=h.source),{done:!1,value:[e.key,f.key,e.attributes,f.attributes,h.key,h.attributes]}}))):function(t){var e,n,r,i,o=t._nodes.values(),a=t.type,u="outer";return new N((function t(){var c;if("outer"===u)return!0===(c=o.next()).done?c:(e=c.value,u="directed",t());if("directed"===u)return"undirected"===a?(u="undirected",t()):(r=e.out,n=Object.keys(e.out),i=0,u="inner-directed",t());if("undirected"===u){if("directed"===a)return u="outer",t();r=e.undirected,n=Object.keys(e.undirected),i=0,u="inner-undirected"}if(i>=n.length)return u="inner-undirected"===u?"outer":"undirected",t();var d=n[i++],s=r[d],h=s.target;return"inner-undirected"===u&&h.key===e.key&&(h=s.source),{done:!1,value:[e.key,h.key,e.attributes,h.attributes,s.key,s.attributes]}}))}(this);var t,e,n,r,i,o,a,u,c},r.nodes=function(){return"function"==typeof Array.from?Array.from(this._nodes.keys()):D(this._nodes.keys(),this._nodes.size)},r.forEachNode=function(t){if("function"!=typeof t)throw new j("Graph.forEachNode: expecting a callback.");this._nodes.forEach((function(e,n){t(n,e.attributes)}))},r.forEachNodeUntil=function(t){if("function"!=typeof t)throw new j("Graph.forEachNode: expecting a callback.");for(var e,n,r=this._nodes.values();!0!==(e=r.next())&&!t((n=e.value).key,n.attributes););},r.nodeEntries=function(){var t=this._nodes.values();return new N((function(){var e=t.next();if(e.done)return e;var n=e.value;return{value:[n.key,n.attributes],done:!1}}))},r.exportNode=function(t){t=""+t;var e=this._nodes.get(t);if(!e)throw new O('Graph.exportNode: could not find the "'.concat(t,'" node in the graph.'));return Lt(t,e)},r.exportEdge=function(t){t=""+t;var e=this._edges.get(t);if(!e)throw new O('Graph.exportEdge: could not find the "'.concat(t,'" edge in the graph.'));return Nt(t,e)},r.export=function(){var t=new Array(this._nodes.size),e=0;this._nodes.forEach((function(n,r){t[e++]=Lt(r,n)}));var n=new Array(this._edges.size);return e=0,this._edges.forEach((function(t,r){n[e++]=Nt(r,t)})),{attributes:this.getAttributes(),nodes:t,edges:n,options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops}}},r.importNode=function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Dt(t);if(n){if("not-object"===n)throw new j('Graph.importNode: invalid serialized node. A serialized node should be a plain object with at least a "key" property.');if("no-key"===n)throw new j("Graph.importNode: no key provided.");if("invalid-attributes"===n)throw new j("Graph.importNode: invalid attributes. Attributes should be a plain object, null or omitted.")}var r=t.key,i=t.attributes,o=void 0===i?{}:i;return e?this.mergeNode(r,o):this.addNode(r,o),this},r.importEdge=function(t){var e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=Ut(t);if(n){if("not-object"===n)throw new j('Graph.importEdge: invalid serialized edge. A serialized edge should be a plain object with at least a "source" & "target" property.');if("no-source"===n)throw new j("Graph.importEdge: missing souce.");if("no-target"===n)throw new j("Graph.importEdge: missing target.");if("invalid-attributes"===n)throw new j("Graph.importEdge: invalid attributes. Attributes should be a plain object, null or omitted.");if("invalid-undirected"===n)throw new j("Graph.importEdge: invalid undirected. Undirected should be boolean or omitted.")}var r=t.source,i=t.target,o=t.attributes,a=void 0===o?{}:o,u=t.undirected,c=void 0!==u&&u;return"key"in t?(e?c?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:c?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey).call(this,t.key,r,i,a):(e?c?this.mergeUndirectedEdge:this.mergeDirectedEdge:c?this.addUndirectedEdge:this.addDirectedEdge).call(this,r,i,a),this},r.import=function(t){var e,n,r,i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(s(t))return this.import(t.export(),i),this;if(!h(t))throw new j("Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.");if(t.attributes){if(!h(t.attributes))throw new j("Graph.import: invalid attributes. Expecting a plain object.");i?this.mergeAttributes(t.attributes):this.replaceAttributes(t.attributes)}if(t.nodes){if(r=t.nodes,!Array.isArray(r))throw new j("Graph.import: invalid nodes. Expecting an array.");for(e=0,n=r.length;e<n;e++)this.importNode(r[e],i)}if(t.edges){if(r=t.edges,!Array.isArray(r))throw new j("Graph.import: invalid edges. Expecting an array.");for(e=0,n=r.length;e<n;e++)this.importEdge(r[e],i)}return this},r.nullCopy=function(t){return new n(c({},this._options,t))},r.emptyCopy=function(t){var e=this.nullCopy(t);return this._nodes.forEach((function(t,n){var r=c({},t.attributes);t=new e.NodeDataClass(n,r),e._nodes.set(n,t)})),e},r.copy=function(){var t=new n(this._options);return t.import(this),t},r.upgradeToMixed=function(){return"mixed"===this.type||(this._nodes.forEach((function(t){return t.upgradeToMixed()})),this._options.type="mixed",l(this,"type",this._options.type),p(this,"NodeDataClass",C)),this},r.upgradeToMulti=function(){return this.multi||(this._options.multi=!0,l(this,"multi",!0),(t=this)._nodes.forEach((function(e,n){if(e.out)for(var r in e.out){var i=new Set;i.add(e.out[r]),e.out[r]=i,t._nodes.get(r).in[n]=i}if(e.undirected)for(var o in e.undirected)if(!(o>n)){var a=new Set;a.add(e.undirected[o]),e.undirected[o]=a,t._nodes.get(o).undirected[n]=a}}))),this;var t},r.clearIndex=function(){return this._nodes.forEach((function(t){void 0!==t.in&&(t.in={},t.out={}),void 0!==t.undirected&&(t.undirected={})})),this},r.toJSON=function(){return this.export()},r.toString=function(){return"[object Graph]"},r.inspect=function(){var t=this,e={};this._nodes.forEach((function(t,n){e[n]=t.attributes}));var n={},r={};this._edges.forEach((function(e,i){var o=e.undirected?"--":"->",a="",u="(".concat(e.source.key,")").concat(o,"(").concat(e.target.key,")");e.generatedKey?t.multi&&(void 0===r[u]?r[u]=0:r[u]++,a+="".concat(r[u],". ")):a+="[".concat(i,"]: "),n[a+=u]=e.attributes}));var i={};for(var o in this)this.hasOwnProperty(o)&&!Ot.has(o)&&"function"!=typeof this[o]&&(i[o]=this[o]);return i.attributes=this._attributes,i.nodes=e,i.edges=n,p(i,"constructor",this.constructor),i},n}(v);"undefined"!=typeof Symbol&&(Tt.prototype[Symbol.for("nodejs.util.inspect.custom")]=Tt.prototype.inspect),[{name:function(t){return"".concat(t,"Edge")},generateKey:!0},{name:function(t){return"".concat(t,"DirectedEdge")},generateKey:!0,type:"directed"},{name:function(t){return"".concat(t,"UndirectedEdge")},generateKey:!0,type:"undirected"},{name:function(t){return"".concat(t,"EdgeWithKey")}},{name:function(t){return"".concat(t,"DirectedEdgeWithKey")},type:"directed"},{name:function(t){return"".concat(t,"UndirectedEdgeWithKey")},type:"undirected"}].forEach((function(t){["add","merge","update"].forEach((function(e){var n=t.name(e),r="add"===e?Mt:Kt;t.generateKey?Tt.prototype[n]=function(i,o,a){return r(this,n,!0,"undirected"===(t.type||this.type),null,i,o,a,"update"===e)}:Tt.prototype[n]=function(i,o,a,u){return r(this,n,!1,"undirected"===(t.type||this.type),i,o,a,u,"update"===e)}}))})),"undefined"!=typeof Symbol&&(Tt.prototype[Symbol.iterator]=Tt.prototype.adjacency),function(t){R.forEach((function(e){var n=e.name,r=e.attacher;r(t,n("Edge"),"mixed"),r(t,n("DirectedEdge"),"directed"),r(t,n("UndirectedEdge"),"undirected")}))}(Tt),function(t){B.forEach((function(e){!function(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t,e){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return[];if(!arguments.length)return it(this,r);if(1===arguments.length){t=""+t;var o=this._nodes.get(t);if(void 0===o)throw new O("Graph.".concat(n,': could not find the "').concat(t,'" node in the graph.'));return ct(this.multi,"mixed"===r?this.type:r,i,o)}if(2===arguments.length){t=""+t,e=""+e;var a=this._nodes.get(t);if(!a)throw new O("Graph.".concat(n,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new O("Graph.".concat(n,':  could not find the "').concat(e,'" target node in the graph.'));return ft(r,this.multi,i,a,e)}throw new j("Graph.".concat(n,": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length,")."))}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o="forEach"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e,n){if("mixed"===r||"mixed"===this.type||r===this.type){if(1===arguments.length)return ot(this,r,n=t);if(2===arguments.length){t=""+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new O("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return dt(this.multi,"mixed"===r?this.type:r,i,a,n)}if(3===arguments.length){t=""+t,e=""+e;var u=this._nodes.get(t);if(!u)throw new O("Graph.".concat(o,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new O("Graph.".concat(o,':  could not find the "').concat(e,'" target node in the graph.'));return pt(r,this.multi,i,u,e,n)}throw new j("Graph.".concat(o,": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length,")."))}}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o="forEach"+n[0].toUpperCase()+n.slice(1,-1)+"Until";t.prototype[o]=function(t,e,n){if("mixed"===r||"mixed"===this.type||r===this.type){if(1===arguments.length)return at(this,r,n=t);if(2===arguments.length){t=""+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new O("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return st(this.multi,"mixed"===r?this.type:r,i,a,n)}if(3===arguments.length){t=""+t,e=""+e;var u=this._nodes.get(t);if(!u)throw new O("Graph.".concat(o,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new O("Graph.".concat(o,':  could not find the "').concat(e,'" target node in the graph.'));return lt(r,this.multi,i,u,e,n)}throw new j("Graph.".concat(o,": too many arguments (expecting 1, 2 or 3 and got ").concat(arguments.length,")."))}}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+"Entries";t.prototype[o]=function(t,e){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return N.empty();if(!arguments.length)return ut(this,r);if(1===arguments.length){t=""+t;var n=this._nodes.get(t);if(!n)throw new O("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return ht(r,i,n)}if(2===arguments.length){t=""+t,e=""+e;var a=this._nodes.get(t);if(!a)throw new O("Graph.".concat(o,':  could not find the "').concat(t,'" source node in the graph.'));if(!this._nodes.has(e))throw new O("Graph.".concat(o,':  could not find the "').concat(e,'" target node in the graph.'));return gt(r,i,a,e)}throw new j("Graph.".concat(o,": too many arguments (expecting 0, 1 or 2 and got ").concat(arguments.length,")."))}}(t,e)}))}(Tt),function(t){yt.forEach((function(e){!function(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return[];if(2===arguments.length){var e=""+arguments[0],o=""+arguments[1];if(!this._nodes.has(e))throw new O("Graph.".concat(n,': could not find the "').concat(e,'" node in the graph.'));if(!this._nodes.has(o))throw new O("Graph.".concat(n,': could not find the "').concat(o,'" node in the graph.'));return Gt(this,r,i,e,o)}if(1===arguments.length){t=""+t;var a=this._nodes.get(t);if(void 0===a)throw new O("Graph.".concat(n,': could not find the "').concat(t,'" node in the graph.'));return wt("mixed"===r?this.type:r,i,a)}throw new j("Graph.".concat(n,": invalid number of arguments (expecting 1 or 2 and got ").concat(arguments.length,")."))}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o="forEach"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e){if("mixed"===r||"mixed"===this.type||r===this.type){t=""+t;var n=this._nodes.get(t);if(void 0===n)throw new O("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));!function(t,e,n,r){if("mixed"!==t){if("undirected"===t)return bt(n,n.undirected,r);if("string"==typeof e)return bt(n,n[e],r)}var i=new Set;"undirected"!==t&&("out"!==e&&mt(i,n,n.in,r),"in"!==e&&mt(i,n,n.out,r)),"directed"!==t&&mt(i,n,n.undirected,r)}("mixed"===r?this.type:r,i,n,e)}}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o="forEach"+n[0].toUpperCase()+n.slice(1,-1)+"Until";t.prototype[o]=function(t,e){if("mixed"===r||"mixed"===this.type||r===this.type){t=""+t;var n=this._nodes.get(t);if(void 0===n)throw new O("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));!function(t,e,n,r){if("mixed"!==t){if("undirected"===t)return kt(n,n.undirected,r);if("string"==typeof e)return kt(n,n[e],r)}var i=new Set;if("undirected"!==t){if("out"!==e&&_t(i,n,n.in,r))return;if("in"!==e&&_t(i,n,n.out,r))return}"directed"===t||_t(i,n,n.undirected,r)}("mixed"===r?this.type:r,i,n,e)}}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+"Entries";t.prototype[o]=function(t){if("mixed"!==r&&"mixed"!==this.type&&r!==this.type)return N.empty();t=""+t;var e=this._nodes.get(t);if(void 0===e)throw new O("Graph.".concat(o,': could not find the "').concat(t,'" node in the graph.'));return function(t,e,n){if("mixed"!==t){if("undirected"===t)return Et(n,n.undirected);if("string"==typeof e)return Et(n,n[e])}var r=N.empty(),i=new Set;return"undirected"!==t&&("out"!==e&&(r=W(r,xt(i,n,n.in))),"in"!==e&&(r=W(r,xt(i,n,n.out)))),"directed"!==t&&(r=W(r,xt(i,n,n.undirected))),r}("mixed"===r?this.type:r,i,e)}}(t,e)}))}(Tt);var It=function(t){function n(e){var n=c({type:"directed"},e);if("multi"in n&&!1!==n.multi)throw new j("DirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if("directed"!==n.type)throw new j('DirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(Tt),Pt=function(t){function n(e){var n=c({type:"undirected"},e);if("multi"in n&&!1!==n.multi)throw new j("UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!");if("undirected"!==n.type)throw new j('UndirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(Tt),Rt=function(t){function n(e){var n=c({multi:!0},e);if("multi"in n&&!0!==n.multi)throw new j("MultiGraph.from: inconsistent indication that the graph should be simple in given options!");return t.call(this,n)||this}return e(n,t),n}(Tt),Wt=function(t){function n(e){var n=c({type:"directed",multi:!0},e);if("multi"in n&&!0!==n.multi)throw new j("MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if("directed"!==n.type)throw new j('MultiDirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(Tt),Bt=function(t){function n(e){var n=c({type:"undirected",multi:!0},e);if("multi"in n&&!0!==n.multi)throw new j("MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!");if("undirected"!==n.type)throw new j('MultiUndirectedGraph.from: inconsistent "'+n.type+'" type in given options!');return t.call(this,n)||this}return e(n,t),n}(Tt);function Ft(t){t.from=function(e,n){var r=c({},e.options,n),i=new t(r);return i.import(e),i}}return Ft(Tt),Ft(It),Ft(Pt),Ft(Rt),Ft(Wt),Ft(Bt),Tt.Graph=Tt,Tt.DirectedGraph=It,Tt.UndirectedGraph=Pt,Tt.MultiGraph=Rt,Tt.MultiDirectedGraph=Wt,Tt.MultiUndirectedGraph=Bt,Tt.InvalidArgumentsGraphError=j,Tt.NotFoundGraphError=O,Tt.UsageGraphError=z,Tt}()},972:(t,e,n)=>{var r=n(113),i=n(499),o=n(650),a=i.DEFAULT_COMPARATOR,u=i.reverseComparator;function c(t,e,n,r){for(var i,o,a=e[r];r>n&&t(a,o=e[i=r-1>>1])<0;)e[r]=o,r=i;e[r]=a}function d(t,e,n){for(var r,i=e.length,o=n,a=e[n],u=2*n+1;u<i;)(r=u+1)<i&&t(e[u],e[r])>=0&&(u=r),e[n]=e[u],u=2*(n=u)+1;e[n]=a,c(t,e,o,n)}function s(t,e,n){e.push(n),c(t,e,0,e.length-1)}function h(t,e){var n=e.pop();if(0!==e.length){var r=e[0];return e[0]=n,d(t,e,0),r}return n}function f(t,e,n){if(0===e.length)throw new Error("mnemonist/heap.replace: cannot pop an empty heap.");var r=e[0];return e[0]=n,d(t,e,0),r}function p(t,e,n){var r;return 0!==e.length&&t(e[0],n)<0&&(r=e[0],e[0]=n,n=r,d(t,e,0)),n}function l(t,e){for(var n=e.length>>1;--n>=0;)d(t,e,n)}function g(t,e){for(var n=e.length,r=0,i=new Array(n);r<n;)i[r++]=h(t,e);return i}function y(t){if(this.clear(),this.comparator=t||a,"function"!=typeof this.comparator)throw new Error("mnemonist/Heap.constructor: given comparator should be a function.")}function v(t){if(this.clear(),this.comparator=t||a,"function"!=typeof this.comparator)throw new Error("mnemonist/MaxHeap.constructor: given comparator should be a function.");this.comparator=u(this.comparator)}y.prototype.clear=function(){this.items=[],this.size=0},y.prototype.push=function(t){return s(this.comparator,this.items,t),++this.size},y.prototype.peek=function(){return this.items[0]},y.prototype.pop=function(){return 0!==this.size&&this.size--,h(this.comparator,this.items)},y.prototype.replace=function(t){return f(this.comparator,this.items,t)},y.prototype.pushpop=function(t){return p(this.comparator,this.items,t)},y.prototype.consume=function(){return this.size=0,g(this.comparator,this.items)},y.prototype.toArray=function(){return g(this.comparator,this.items.slice())},y.prototype.inspect=function(){var t=this.toArray();return Object.defineProperty(t,"constructor",{value:y,enumerable:!1}),t},"undefined"!=typeof Symbol&&(y.prototype[Symbol.for("nodejs.util.inspect.custom")]=y.prototype.inspect),v.prototype=y.prototype,y.from=function(t,e){var n,r=new y(e);return n=o.isArrayLike(t)?t.slice():o.toArray(t),l(r.comparator,n),r.items=n,r.size=n.length,r},v.from=function(t,e){var n,r=new v(e);return n=o.isArrayLike(t)?t.slice():o.toArray(t),l(r.comparator,n),r.items=n,r.size=n.length,r},y.siftUp=d,y.siftDown=c,y.push=s,y.pop=h,y.replace=f,y.pushpop=p,y.heapify=l,y.consume=g,y.nsmallest=function(t,e,n){2===arguments.length&&(n=e,e=t,t=a);var i,c,d,s,h=u(t),p=1/0;if(1===e){if(o.isArrayLike(n)){for(i=0,c=n.length;i<c;i++)d=n[i],(p===1/0||t(d,p)<0)&&(p=d);return(s=new n.constructor(1))[0]=p,s}return r(n,(function(e){(p===1/0||t(e,p)<0)&&(p=e)})),[p]}if(o.isArrayLike(n)){if(e>=n.length)return n.slice().sort(t);for(s=n.slice(0,e),l(h,s),i=e,c=n.length;i<c;i++)h(n[i],s[0])>0&&f(h,s,n[i]);return s.sort(t)}var g=o.guessLength(n);return null!==g&&g<e&&(e=g),s=new Array(e),i=0,r(n,(function(t){i<e?s[i]=t:(i===e&&l(h,s),h(t,s[0])>0&&f(h,s,t)),i++})),s.length>i&&(s.length=i),s.sort(t)},y.nlargest=function(t,e,n){2===arguments.length&&(n=e,e=t,t=a);var i,c,d,s,h=u(t),p=-1/0;if(1===e){if(o.isArrayLike(n)){for(i=0,c=n.length;i<c;i++)d=n[i],(p===-1/0||t(d,p)>0)&&(p=d);return(s=new n.constructor(1))[0]=p,s}return r(n,(function(e){(p===-1/0||t(e,p)>0)&&(p=e)})),[p]}if(o.isArrayLike(n)){if(e>=n.length)return n.slice().sort(h);for(s=n.slice(0,e),l(t,s),i=e,c=n.length;i<c;i++)t(n[i],s[0])>0&&f(t,s,n[i]);return s.sort(h)}var g=o.guessLength(n);return null!==g&&g<e&&(e=g),s=new Array(e),i=0,r(n,(function(n){i<e?s[i]=n:(i===e&&l(t,s),t(n,s[0])>0&&f(t,s,n)),i++})),s.length>i&&(s.length=i),s.sort(h)},y.MinHeap=y,y.MaxHeap=v,t.exports=y},937:(t,e,n)=>{var r=n(993),i=n(113);function o(){this.clear()}o.prototype.clear=function(){this.items=[],this.offset=0,this.size=0},o.prototype.enqueue=function(t){return this.items.push(t),++this.size},o.prototype.dequeue=function(){if(this.size){var t=this.items[this.offset];return 2*++this.offset>=this.items.length&&(this.items=this.items.slice(this.offset),this.offset=0),this.size--,t}},o.prototype.peek=function(){if(this.size)return this.items[this.offset]},o.prototype.forEach=function(t,e){e=arguments.length>1?e:this;for(var n=this.offset,r=0,i=this.items.length;n<i;n++,r++)t.call(e,this.items[n],r,this)},o.prototype.toArray=function(){return this.items.slice(this.offset)},o.prototype.values=function(){var t=this.items,e=this.offset;return new r((function(){if(e>=t.length)return{done:!0};var n=t[e];return e++,{value:n,done:!1}}))},o.prototype.entries=function(){var t=this.items,e=this.offset,n=0;return new r((function(){if(e>=t.length)return{done:!0};var r=t[e];return e++,{value:[n++,r],done:!1}}))},"undefined"!=typeof Symbol&&(o.prototype[Symbol.iterator]=o.prototype.values),o.prototype.toString=function(){return this.toArray().join(",")},o.prototype.toJSON=function(){return this.toArray()},o.prototype.inspect=function(){var t=this.toArray();return Object.defineProperty(t,"constructor",{value:o,enumerable:!1}),t},"undefined"!=typeof Symbol&&(o.prototype[Symbol.for("nodejs.util.inspect.custom")]=o.prototype.inspect),o.from=function(t){var e=new o;return i(t,(function(t){e.enqueue(t)})),e},o.of=function(){return o.from(arguments)},t.exports=o},499:(t,e)=>{e.DEFAULT_COMPARATOR=function(t,e){return t<e?-1:t>e?1:0},e.DEFAULT_REVERSE_COMPARATOR=function(t,e){return t<e?1:t>e?-1:0},e.reverseComparator=function(t){return function(e,n){return t(n,e)}},e.createTupleComparator=function(t){return 2===t?function(t,e){return t[0]<e[0]?-1:t[0]>e[0]?1:t[1]<e[1]?-1:t[1]>e[1]?1:0}:function(e,n){for(var r=0;r<t;){if(e[r]<n[r])return-1;if(e[r]>n[r])return 1;r++}return 0}}},650:(t,e,n)=>{var r=n(113),i=n(801).isTypedArray;function o(t){return"number"==typeof t.length?t.length:"number"==typeof t.size?t.size:void 0}e.isArrayLike=function(t){return Array.isArray(t)||i(t)},e.guessLength=o,e.toArray=function(t){var e=o(t),n="number"==typeof e?new Array(e):[],i=0;return r(t,(function(t){n[i++]=t})),n}},801:(t,e)=>{var n=Math.pow(2,8)-1,r=Math.pow(2,16)-1,i=Math.pow(2,32)-1,o=Math.pow(2,7)-1,a=Math.pow(2,15)-1,u=Math.pow(2,31)-1;e.getPointerArray=function(t){var e=t-1;return e<=n?Uint8Array:e<=r?Uint16Array:e<=i?Uint32Array:Float64Array},e.getSignedPointerArray=function(t){var e=t-1;return e<=o?Int8Array:e<=a?Int16Array:e<=u?Int32Array:Float64Array},e.getNumberType=function(t){return t===(0|t)?-1===Math.sign(t)?t<=127&&t>=-128?Int8Array:t<=32767&&t>=-32768?Int16Array:Int32Array:t<=255?Uint8Array:t<=65535?Uint16Array:Uint32Array:Float64Array};var c={Uint8Array:1,Int8Array:2,Uint16Array:3,Int16Array:4,Uint32Array:5,Int32Array:6,Float32Array:7,Float64Array:8};e.getMinimalRepresentation=function(t,n){var r,i,o,a,u,d=null,s=0;for(a=0,u=t.length;a<u;a++)o=n?n(t[a]):t[a],i=e.getNumberType(o),(r=c[i.name])>s&&(s=r,d=i);return d},e.isTypedArray=function(t){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView(t)},e.concat=function(){var t,e,n,r=0;for(t=0,n=arguments.length;t<n;t++)r+=arguments[t].length;var i=new arguments[0].constructor(r);for(t=0,e=0;t<n;t++)i.set(arguments[t],e),e+=arguments[t].length;return i},e.indices=function(t){for(var n=new(e.getPointerArray(t))(t),r=0;r<t;r++)n[r]=r;return n}},113:t=>{var e="undefined"!=typeof ArrayBuffer,n="undefined"!=typeof Symbol;function r(t,r){var i,o,a,u,c;if(!t)throw new Error("obliterator/forEach: invalid iterable.");if("function"!=typeof r)throw new Error("obliterator/forEach: expecting a callback.");if(Array.isArray(t)||e&&ArrayBuffer.isView(t)||"string"==typeof t||"[object Arguments]"===t.toString())for(a=0,u=t.length;a<u;a++)r(t[a],a);else if("function"!=typeof t.forEach)if(n&&Symbol.iterator in t&&"function"!=typeof t.next&&(t=t[Symbol.iterator]()),"function"!=typeof t.next)for(o in t)t.hasOwnProperty(o)&&r(t[o],o);else for(i=t,a=0;!0!==(c=i.next()).done;)r(c.value,a),a++;else t.forEach(r)}r.forEachWithNullKeys=function(t,r){var i,o,a,u,c;if(!t)throw new Error("obliterator/forEachWithNullKeys: invalid iterable.");if("function"!=typeof r)throw new Error("obliterator/forEachWithNullKeys: expecting a callback.");if(Array.isArray(t)||e&&ArrayBuffer.isView(t)||"string"==typeof t||"[object Arguments]"===t.toString())for(a=0,u=t.length;a<u;a++)r(t[a],null);else if(t instanceof Set)t.forEach((function(t){r(t,null)}));else if("function"!=typeof t.forEach)if(n&&Symbol.iterator in t&&"function"!=typeof t.next&&(t=t[Symbol.iterator]()),"function"!=typeof t.next)for(o in t)t.hasOwnProperty(o)&&r(t[o],o);else for(i=t,a=0;!0!==(c=i.next()).done;)r(c.value,null),a++;else t.forEach(r)},t.exports=r},993:t=>{function e(t){Object.defineProperty(this,"_next",{writable:!1,enumerable:!1,value:t}),this.done=!1}e.prototype.next=function(){if(this.done)return{done:!0};var t=this._next();return t.done&&(this.done=!0),t},"undefined"!=typeof Symbol&&(e.prototype[Symbol.iterator]=function(){return this}),e.of=function(){var t=arguments,n=t.length,r=0;return new e((function(){return r>=n?{done:!0}:{done:!1,value:t[r++]}}))},e.empty=function(){var t=new e(null);return t.done=!0,t},e.is=function(t){return t instanceof e||"object"==typeof t&&null!==t&&"function"==typeof t.next},t.exports=e}},e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={exports:{}};return t[r].call(i.exports,i,i.exports,n),i.exports}(()=>{"use strict";const t=()=>({addEdge:document.getElementById("addEdge"),src:document.getElementById("src"),target:document.getElementById("target"),weight:document.getElementById("weight"),runMST:document.getElementById("runMST"),reset:document.getElementById("reset"),Top:document.getElementById("top")}),e=new(n(698)),{undirectedSingleSourceLength:r}=n(816);function i(t){return t.nodes()}function o(t){const e=[];return t.forEachUndirectedEdge(((t,n,r,i)=>e.push({src:r,target:i,weight:n.weight}))),e.sort(((t,e)=>e.weight-t.weight)),e}function a(t){return{nodes:i(t),edges:o(t)}}t().addEdge.addEventListener("submit",(n=>{n.preventDefault();const r=t().src.value,i=t().target.value,o=t().weight.value;""!==r&&""!==i&&parseInt(o)>0&&function(t,n,r){e.mergeUndirectedEdge(t,n,{weight:r}),localStorage.setItem("globalGraph",JSON.stringify(a(e))),console.log("edges is added")}(r,i,parseInt(o)),t().src.value="",t().target.value="",t().weight.value="",t().src.focus()})),t().runMST.addEventListener("click",(t=>{!function(){const t=Object.create(e),n=[];o(e).forEach((({src:o,target:u,weight:c})=>{t.dropEdge(o,u);let d=!1;for(let n of i(e)){const e=r(t,n);if(Object.keys(e).length!=t.order){d=!1;break}d=!0}n.push({edge:{src:o,target:u,weight:c},graph:a(t),connect:d}),d||t.mergeUndirectedEdge(o,u,{weight:c})})),console.log("MST is running"),localStorage.setItem("mstGraph",JSON.stringify(n))}()})),t().Top.addEventListener("click",(n=>{n.target==t().reset&&confirm("Are You Sure")&&(e.clear(),localStorage.removeItem("globalGraph"),localStorage.removeItem("mstGraph"),location.reload())}))})()})();